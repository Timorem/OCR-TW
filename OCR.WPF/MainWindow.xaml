<Window x:Class="OCR.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ui="clr-namespace:OCR.WPF.UI"
        xmlns:converters="clr-namespace:OCR.WPF.UI.Converters"
        Title="MainWindow" Height="600" Width="800"
        DataContext="{Binding ModelView, RelativeSource={RelativeSource Self}}"
        AllowDrop="True" DragEnter="MainWindow_OnDragEnter" Drop="MainWindow_OnDrop">
    <Window.Resources>
        <ui:BindingProxy x:Key="Proxy" Data="{Binding}"/>
        <converters:MultiplyConverter x:Key="MultiplyConverter"/>
    </Window.Resources>
    <Grid>
        <TabControl Grid.Row="0" Grid.Column="0">
            <TabItem Header="Original">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Image Grid.Row="0" Grid.Column="0" Source="{Binding Original}" Name="ImageControl" />
                    <Image Grid.Row="1" Grid.Column="0" Source="{Binding VerticalProjection.Output}"
                           Width="{Binding ActualWidth, ElementName=ImageControl}" Stretch="Fill" />
                    <Image Grid.Row="0" Grid.Column="1" Source="{Binding HorizontalProjection.Output}"
                           Height="{Binding ActualHeight, ElementName=ImageControl}" Stretch="Fill" />
                </Grid>
            </TabItem>
            <TabItem Header="Character Isolation">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="200"/>
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding CharacterIsolation.Output}" Name="IsolationOutput"/>
                        <TextBlock Text="{Binding CurrentBrightness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                        <Image Grid.Row="1" Grid.Column="0" Source="{Binding VerticalProjection.Output}"
                           Width="{Binding ActualWidth, ElementName=IsolationOutput}" Stretch="Fill" />
                        <Image Grid.Row="0" Grid.Column="1" Source="{Binding HorizontalProjection.Output}"
                           Height="{Binding ActualHeight, ElementName=IsolationOutput}" Stretch="Fill" />
                    </Grid>
                    <GroupBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Header="Actions">
                        <StackPanel>
                            <DockPanel>
                                <TextBlock Margin="3"  DockPanel.Dock="Left" Width="250" Text="{Binding CharacterIsolation.WordPixelSpaces, StringFormat={}Spaces between words : {0:n}}"/>
                                <Slider DockPanel.Dock="Right" Minimum="1" Maximum="20" Value="{Binding CharacterIsolation.WordPixelSpaces}" Thumb.DragCompleted="RangeBase_OnValueChanged"/>
                            </DockPanel>
                            <DockPanel>
                                <TextBlock Margin="3"  DockPanel.Dock="Left" Width="250" Text="{Binding CharacterIsolation.CharactersPixelSpaces, StringFormat={}Spaces between characters : {0:n}}"/>
                                <Slider DockPanel.Dock="Right" Minimum="1" Maximum="20" Value="{Binding CharacterIsolation.CharactersPixelSpaces}" Thumb.DragCompleted="RangeBase_OnValueChanged"/>
                            </DockPanel>
                            <DockPanel>
                                <TextBlock Margin="3"  DockPanel.Dock="Left" Width="250" Text="{Binding CharacterIsolation.CharactersBlankThreshold, StringFormat={}Characters blank threshold : {0:0.0000}%}"/>
                                <Slider DockPanel.Dock="Right" Minimum="0.0001" Maximum="0.1" Value="{Binding CharacterIsolation.CharactersBlankThreshold}" Thumb.DragCompleted="RangeBase_OnValueChanged"/>
                            </DockPanel>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding CharacterIsolation.ShowLines}" Margin="3" Content="Show Lines" Checked="ToggleButton_OnChecked"/>
                                <CheckBox IsChecked="{Binding CharacterIsolation.ShowCharacters}" Margin="3" Content="Show Characters" Checked="ToggleButton_OnChecked"/>
                                <CheckBox IsChecked="{Binding CharacterIsolation.ShowWords}" Margin="3" Content="Show Words" Checked="ToggleButton_OnChecked"/>
                            </StackPanel>
                            <Button Margin="3" Content="Compute" Command="{Binding ApplyCharacterIsolationCommand}" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Grid.Row="0" Grid.Column="1" Header="Words">
                        <ListBox ItemsSource="{Binding CharacterIsolation.Words}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Image Stretch="None">
                                        <Image.Source>
                                            <CroppedBitmap
                                                Source="{Binding Data.Original, Source={StaticResource Proxy}}"
                                                SourceRect="{Binding Region}" />
                                        </Image.Source>
                                    </Image>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </GroupBox>

                </Grid>
            </TabItem>
            <TabItem Header="Edge Detection">
                <StackPanel>
                    <Image Source="{Binding EdgeDetector.Output}" />
                    <GroupBox Header="Actions">
                        <StackPanel>
                            <DockPanel>
                                <TextBlock Margin="3"  DockPanel.Dock="Left" Width="250" Text="{Binding EdgeDetector.GradientLimit}"/>
                                <Slider DockPanel.Dock="Right" Minimum="0" Maximum="255" Value="{Binding EdgeDetector.GradientLimit}" Thumb.DragCompleted="GradientRangeBase_OnValueChanged"/>
                            </DockPanel>
                            <Button Margin="3" Content="Compute" Command="{Binding ApplyEdgeDetectionCommand}" />
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
        </TabControl>
    </Grid>
</Window>